kind: Service
apiVersion: v1
metadata:
  name: cnhrenov
  labels:
    app: cnhrenov
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: cnhrenov
  type: ClusterIP
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: cnhrenov
  labels:
    app: cnhrenov
    app.kubernetes.io/component: cnhrenov
    app.kubernetes.io/instance: cnhrenov
    app.kubernetes.io/name: cnhrenov
    app.kubernetes.io/part-of: cnhrenov
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: 14-ubi7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cnhrenov
  template:
    metadata:
      labels:
        app: cnhrenov
        deploymentconfig: cnhrenov
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      containers:
        - name: cnhrenov
          image: "$IMAGE"
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DATABASE_USER
              value: "$DATABASE_USER"
            - name: DATABASE_PWS
              value: "$DATABASE_PWS"
            - name: SERVER_NAME
              value: "$SERVER_NAME"
            - name: DATABASE_NAME
              value: "$DATABASE_NAME"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      imagePullSecrets:
        - name: acr-secret
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

