# This example workflow will build container image
# of the application using source to image build
# startegy and push the image to ghcr.io (Image registry)

name: S2I build image
on: 
  push:
    branches:
      - new
    paths:
      - "cnhsit/**"
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.token }}
  APP_NAME: test
  IMAGE_TAGS: latest ${{ github.sha }}
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "testelucas"
  
  DATABASE_PWS: ${{ secrets.DATABASE_PWS }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  SERVER_NAME: ${{ secrets.SERVER_NAME }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-18.04
    name: Build and push to ghcr.io
    steps:
      # Checkout spring petclinic repository
      - name: Checkout
        uses: actions/checkout@v2

      # Setup S2I and build container image
      - name: Setup and Build
        id: build_image
        uses: redhat-actions/s2i-build@v2
        with:
          image: ${{ env.APP_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          builder_image: 'registry.access.redhat.com/ubi8/nodejs-14'

      # Push image to the GitHub container registry
      - name: Push To GitHub container registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: cnhsit
          path: ./cnhsit/cnhsit.yaml
  deploy:
    needs: build-and-push
    name: Deploy to Openshift
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: cnhsit
          path: './cnhsit'
      - name: OpenShift Client Installer
        uses: redhat-actions/oc-installer@v1
        with:
          oc_version: latest
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          
          
      - name: Replace Environment Variables
        uses: danielr1996/envsubst-action@1.0.0
        env:
          IMAGE: ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
          SERVER_NAME: ${{ secrets.SERVER_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PWS: ${{ secrets.DATABASE_PWS }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        with:
          input: cnhsit/cnhsit.yaml
          output: cnhsitdeploy.yaml
      - name: Deploy to openshift
        run: oc apply -f cnhsitdeploy.yaml
    

